#include "defines.h"
#include "Menu/pages/Include/PageDisplay.h"
#include "Menu/MenuItems.h"
#include "Settings/Settings.h"
#include "Display/Painter.h"


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern const PageBase pageSettings;

const PageBase *PageDisplay::PageSettings::pointer = &pageSettings;


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
static void OnChanged_Settings_Brightness()
{
}

DEF_GOVERNOR( gBrightness,                                                                                                                            //--- ДИСПЛЕЙ - НАСТРОЙКИ - Яркость ---
    "Яркость",
    "Установка яркости свечения дисплея",
    BRIGHTNESS_DISPLAY, 0, 100, pageSettings, Governor::FuncActive, OnChanged_Settings_Brightness, 0
)

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEF_GOVERNOR( gLevels,                                                                                                                                 //--- ДИСПЛЕЙ - НАСТРОЙКИ - Уровни ---
    "Уровни",
    "Задаёт время, в течение которого после поворота ручки сещения напряжения на экране остаётся вспомогательная метка уровня смещения",
    TIME_SHOW_LEVELS, 0, 125, pageSettings, Governor::FuncActive, Governor::FuncChange, 0
)

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEF_GOVERNOR( gTime,                                                                                                                                    //--- ДИСПЛЕЙ - НАСТРОЙКИ - Время ---
    "Время",
    "Установка времени, в течение которого сообщения будут находиться на экране",
    TIME_MESSAGES, 1, 99, pageSettings, Governor::FuncActive, Governor::FuncChange, 0
)

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DEF_CHOICE_3( cStringNavigation,                                                                                                                  //--- ДИСПЛЕЙ - НАСТРОЙКИ - Строка меню ---
    "Строка меню",
    "При выборе \nПоказывать\n слева вверху экрана выводится полный путь до текущей страницы меню",
    "Временно",
    "Всегда",
    "Никогда",
    SHOW_STRING_NAVI, pageSettings, Choice::FuncActive, Choice::FuncChange, Choice::FuncDraw
)

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
static void OnChanged_Settings_AltMarkers(bool active)
{
    Display::ChangedRShiftMarkers(active);
}

DEF_CHOICE_3( cAltMarkers,                                                                                                                       //--- ДИСПЛЕЙ - НАСТРОЙКИ - Доп. маркеры ---
    "Доп. маркеры",
    "Устанавливает режим отображения дополнительных маркеров уровней смещения и синхронизации:\n"
    "\"Скрывать\" - дополнительные маркеры не показываются,\n"
    "\"Показывать\" - дополнительные маркеры показываются всегда,\n"
    "\"Авто\" - дополнительные маркеры показываются в течение 5 сек после поворота ручки смещения канала по напряжению или уровня синхронизации"
    ,
    "Скрывать",
    "Показывать",
    "Авто",
    ALT_MARKERS, pageSettings, Choice::FuncActive, OnChanged_Settings_AltMarkers, Choice::FuncDraw
)

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
static void OnChanged_Settings_AutoHide(bool autoHide)
{
    Menu::SetAutoHide(autoHide);
}

DEF_CHOICE_6( cAutoHide,                                                                                                                             //--- ДИСПЛЕЙ - НАСТРОЙКИ - Скрывать ---
    "Скрывать",
    "Установка после последнего нажатия кнопки или поворота ручки, по истечении которого меню автоматически убирается с экрана",
    "Никогда",
    "Через 5 сек",
    "Через 10 сек",
    "Через 15 сек",
    "Через 30 сек",
    "Через 60 сек",
    MENU_AUTO_HIDE, pageSettings, Choice::FuncActive, OnChanged_Settings_AutoHide, Choice::FuncDraw
)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DEF_PAGE_7( pageSettings, // -V641 // -V1027                                                                                                                    //--- ДИСПЛЕЙ - НАСТРОЙКИ ---
    "НАСТРОЙКИ",
    "Дополнительные настройки дисплея",
    PageDisplay::PageSettings::PageColors::pointer,     ///< ДИСПЛЕЙ - НАСТРОЙКИ - ЦВЕТА
    &gBrightness,                                       ///< ДИСПЛЕЙ - НАСТРОЙКИ - Яркость
    &gLevels,                                           ///< ДИСПЛЕЙ - НАСТРОЙКИ - Уровни
    &gTime,                                             ///< ДИСПЛЕЙ - НАСТРОЙКИ - Время
    &cStringNavigation,                                 ///< ДИСПЛЕЙ - НАСТРОЙКИ - Строка меню
    &cAltMarkers,                                       ///< ДИСПЛЕЙ - НАСТРОЙКИ - Доп. маркеры
    &cAutoHide,                                         ///< ДИСПЛЕЙ - НАСТРОЙКИ - Скрывать
    Page::Name::Display_Settings, PageDisplay::pointer, Page::FuncActive, Page::FuncPress, Page::FuncDraw, FuncRegSetPage
)
