#pragma once
#include "Osci/ParametersOsci.h"


// Здесь хранятся настройки, которые определяются при калибровке и не перезаписываются при выключении прибора


struct SettingsNRST
{ //-V802
    /*
        ВНИМАНИЕ !!! Для корректной работы нельзя уменьшать размер этой структуры
    */

    uint   size;                                // Размер структуры. За одно при загрузке из памяти можно определить, что структура пуста - здесь будет значение 0xFFFFFFFF
    int16  numAveForRand;                       // По скольким измерениям усреднять сигнал в режиме рандомизатора.
    int16  numSmoothForRand;                    // Число точек для скользящего фильта в рандомизаторе.
    int16  correctionTime;                      // Коэффициент коррекции времени.
    int16  enumGameMax;                         // Ограничение ворот в рандомизаторе сверху
    int16  enumGameMin;                         // Ограничение ворот в рандомизаторе снизу
    int8   exShift[Chan::Count][Range::Count];  // Дополнительное смещение
    float  exStretch[Chan::Count];              // Дополнительная растяжка по каналу
    int8   enumAverageRand;                     // Количество дополнительных усреднений в рандомизаторе
    // Инициализация при включении. Проиходит определние наличия настроек в ROM и их загрузка в случае, если настройки есть. Если настроек нету - инициализация значениями по умолчанию
    void Init();
    // Сохранение настроек в ROM. Происходит только если настройки в setNRST не совпадают с хранящимися в ROM
    void Save();

    void Reset();

    bool operator!=(const SettingsNRST &rhs);

    // Сбросить дополнительное смеещение АЦП
    void ResetExtraShift();

    // Сбросить дополнительную растяжку АЦП
    void ResetExtraStretch();
};


extern SettingsNRST setNRST;
