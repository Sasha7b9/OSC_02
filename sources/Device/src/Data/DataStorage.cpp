#include "stdafx.h"
#ifndef WIN32
#include "defines.h"
#include "DataBuffer.h"
#include "DataStorage.h"
#include "Reader.h"
#include <string.h>
#endif


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void DataStorage::Init()
{
    DataBuffer::Init();
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void DataStorage::Push(DataSettings *ds)
{
    //DataBuffer::Push(ds);

    memcpy(OUT_A, ds->DataA(), FPGA_MAX_NUM_POINTS);
    memcpy(OUT_B, ds->DataB(), FPGA_MAX_NUM_POINTS);
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
bool DataStorage::GetData(DataSettings *ds)
{
    DataSettings *settings = DataBuffer::Top();
    if (settings)
    {
        *ds = *settings;
    }
    return settings != 0;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
uint DataStorage::NumElementsInStorage()
{
    return DataBuffer::Size();
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DataSettings *DataStorage::DataSettingsFromEnd(int /*fromEnd*/)
{
    return 0;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
uint8 *DataStorage::GetAverageData(Chan /*ch*/)
{
    return 0;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
void DataStorage::GetDataFromEnd(int /*fromEnd*/, DataSettings * /*ds*/, uint8 * /*dataA*/, uint8 * /*dataB*/)
{
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
bool DataStorage::GetLimitation(Chan /*ch*/, uint8 * /*data*/, int /*direction*/)
{
    return false;
}
