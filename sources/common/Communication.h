#pragma once

/*
    Функциональность взаимодействия между процессорами
*/


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Transceiver
{
    /// Инициализация пина-индикатора передачи. Реализуется приложением.
    void InitSendPin();
    /// Установка функции инициализации остальных пинов. Эта функция будет вызваться при каждой перече данных.
    void SetCallbackInitPins(void(*func)());
    void SetCallbackSetREQ_SEND(void(*func)());
    void SetCallbackResetREQ_SEND(void(*func)());
    void SetCallbackReadALLOW_SEND(bool(*func)());
    /// Передача size байт, начиная с адреса data
    void Send(uint8 *data, uint size);
};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace Receiver
{
    /// Инициалзиация пина-индикатора передчи. Реализуется приложением.
    void InitSendPin();
    /// Установка функции инициализации остальных пинов. Эта функция будет вызываться каждый раз, когда нужно принимать данные
    void SetCallbackInitPins(void(*func)());
    /// Установка функции приёма принимаемых байт. Будет вызываться на каждый очередной принятый байт.
    void SetCallbackReceive(void(*func)(uint8));
    /// Функция циклического опроса. Принимает данные, если таковые имеются, и передаёт их через функцию, установленную в SetCallbackReceive.
    void Update();
};

